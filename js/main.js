const DOMstrings={entries:document.querySelector(".dashboard__entries"),entryItems:document.querySelector(".dashboard__entries-item"),currentDate:document.querySelector(".entryarea__box-date--currentdate"),entryTitle:document.querySelector(".entryarea__box-title"),entryField:document.querySelector(".entryarea__box-entryfield"),saveBtn:document.querySelector(".entryarea__box-savebtn"),updateBtn:document.querySelector(".entryarea__box-updatebtn"),displayBox:document.querySelector(".display-message")},data=[];let storage=JSON.parse(localStorage.getItem("entries"));storage=storage?JSON.parse(localStorage.getItem("entries")):[];const days=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],currentDay=days[(new Date).getDay()],currentYear=(new Date).getFullYear(),currentDate=(new Date).getDate(),currentMonth=(new Date).getMonth();function loadPage(){localStorage.setItem("entries",JSON.stringify(storage)),console.log(`Initial storage: ${storage}`),DOMstrings.updateBtn.style.display="none",storage&&storage.forEach((e,t)=>{const n=`\n            <li class="dashboard__entries-item" id="${storage[t].id}"><p class="dashboard__entries-item--title">${storage[t].title}</p>\n            <div class="date">\n                <img src="img/calendar-solid.svg" alt="Calendar Icon" class="icon-calendar"> <p class="dashboard__entries-item--date">${storage[t].entryDate}</p>\n            </div>\n            </li>\n            `;DOMstrings.entries.insertAdjacentHTML("afterbegin",n)}),DOMstrings.currentDate.textContent=`${currentDay}. ${currentDate}/${currentMonth+1}/${currentYear}`,DOMstrings.displayBox.style.visibility="hidden"}function createEntry(){if(""!==DOMstrings.entryTitle.value&&""!==DOMstrings.entryField.value){let e=JSON.parse(localStorage.getItem("entries"));const t={title:DOMstrings.entryTitle.value,entryText:DOMstrings.entryField.value,entryDate:`${currentDay}. ${currentDate}/${currentMonth+1}/${currentYear}`,id:e.length};e.push(t),localStorage.setItem("entries",JSON.stringify(e)),console.log(`Local Storage retrieved: ${e}`);const n=t.id,s=`\n        <li class="dashboard__entries-item" id="${e[n].id}"><p class="dashboard__entries-item--title">${e[n].title}</p>\n        <div class="date">\n            <img src="img/calendar-solid.svg" alt="Calendar Icon" class="icon-calendar"> <p class="dashboard__entries-item--date">${e[n].entryDate}</p>\n        </div>\n        </li>\n        `;DOMstrings.entries.insertAdjacentHTML("afterbegin",s),console.log(e),DOMstrings.entryTitle.value="",DOMstrings.entryField.value="",DOMstrings.displayBox.style.visibility="visible",DOMstrings.displayBox.firstElementChild.textContent="Entry Created!",setTimeout((function(){DOMstrings.displayBox.style.visibility="hidden"}),1500)}document.querySelector(".dashboard__entrymenu-item").addEventListener("click",(function(e){console.log("You pressed the new entry-btn"),DOMstrings.entryTitle.value="",DOMstrings.entryField.value="",DOMstrings.saveBtn.style.display="inline-block",DOMstrings.saveBtn.textContent="Save Now",DOMstrings.updateBtn.style.display="none"}))}function readEntry(e){DOMstrings.saveBtn.style.display="none",DOMstrings.updateBtn.style.display="inline-block";const t=e.target.closest(".dashboard__entries-item");let n=JSON.parse(localStorage.getItem("entries"));console.log(`This is the retrieved Storage: ${n}`);const s=n.findIndex(e=>e.id==t.id);console.log(s),DOMstrings.entryTitle.value=n[s].title,DOMstrings.entryField.value=n[s].entryText,DOMstrings.currentDate.textContent=n[s].entryDate,DOMstrings.saveBtn.textContent="Update Now",DOMstrings.updateBtn.addEventListener("click",(function(e){console.log(`This is the saved event ID: ${s}`),console.log(`This is the targeted id: ${t.id}. Its type is: ${typeof t.id}`),storage[s].title=DOMstrings.entryTitle.value,storage[s].entryText=DOMstrings.entryField.value,localStorage.setItem("entries",JSON.stringify(storage)),document.getElementById(t.id).firstElementChild.textContent=DOMstrings.entryTitle.value,DOMstrings.displayBox.style.visibility="visible",DOMstrings.displayBox.firstElementChild.textContent="Entry Updated!",setTimeout((function(){DOMstrings.displayBox.style.visibility="hidden"}),1500)})),document.querySelector(".delete-btn").addEventListener("click",(function(e){if(""===DOMstrings.entryTitle.value||""===DOMstrings.entryTitle.value)DOMstrings.displayBox.style.visibility="visible",DOMstrings.displayBox.firstElementChild.textContent="Empty Inputs!",DOMstrings.displayBox.firstElementChild.style.color="#F04126",setTimeout((function(){DOMstrings.displayBox.style.visibility="hidden"}),1500);else{let n,s=JSON.parse(localStorage.getItem("entries"));Array.from(e.target.parentElement.parentElement.parentElement.parentElement.parentElement.firstElementChild.firstElementChild.nextElementSibling.nextElementSibling.nextElementSibling.children).forEach((e,s)=>{console.log(e.id),e.id===t.id&&(n=e.id,console.log(n+"this is the entryID"),e.remove())}),s.forEach((e,n)=>{e.id==t.id&&s.splice(n,1)}),localStorage.setItem("entries",JSON.stringify(s)),DOMstrings.entryTitle.value="",DOMstrings.entryField.value="",DOMstrings.displayBox.style.visibility="visible",DOMstrings.displayBox.firstElementChild.textContent="Entry Deleted!",DOMstrings.displayBox.firstElementChild.style.color="#F04126",setTimeout((function(){DOMstrings.displayBox.style.visibility="hidden"}),1500)}})),document.querySelector(".dashboard__entrymenu-item").addEventListener("click",(function(e){console.log("You pressed the new entry-btn"),DOMstrings.entryTitle.value="",DOMstrings.entryField.value="",DOMstrings.saveBtn.style.display="inline-block",DOMstrings.saveBtn.textContent="Save Now",DOMstrings.updateBtn.style.display="none"}))}document.addEventListener("DOMContentLoaded",loadPage),DOMstrings.saveBtn.addEventListener("click",createEntry),DOMstrings.entries.addEventListener("click",readEntry);